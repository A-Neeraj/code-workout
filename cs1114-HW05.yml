---
- name: sortaSum
  external_id: codingbat-sortaSum
  is_public: false
  experience: 50
  language_list: Java
  style_list: code writing
  tag_list: logic, conditionals, if
  current_version:
    version: 1
    creator: metarus208@gmail.com
    prompts:
    - coding_prompt:
        position: 1
        question: |
          Write a function in Java that implements the following logic:
          Given 2 ints, a and b, return their sum. However, sums in the
          range 10..19 inclusive, are forbidden, so in that case just
          return 20.
        class_name: SortaSum
        method_name: sortaSum
        starter_code: |
          public int sortaSum(int a, int b)
          {
              ___
          }
        wrapper_code: |
          public class SortaSum
          {
              ___
          }
        tests: |
          "3, 4",7
          "9, 4",20
          "10, 11",21
          "12, -3",9
          "4, 6",20
          "10, 9",20
          "-3, 12",9,hidden
          "4, 5",9,hidden
          "1, 18",20,hidden
          "7, 3",20,hidden
          "5, 6",20,hidden
          "14, 7",21,hidden
          "14, 6",20,hidden
          "19, 2",21,hidden
          "7, 18",25,hidden

- name: lessBy10
  external_id: codingbat-lessBy10
  is_public: false
  experience: 50
  language_list: Java
  style_list: code writing
  tag_list: logic, conditionals, if
  current_version:
    version: 1
    creator: metarus208@gmail.com
    prompts:
    - coding_prompt:
        position: 1
        question: |
          Write a function in Java that implements the following logic: Given
          three ints, a b c, return true if one of them is 10 or more less
          than one of the others.
        class_name: LessBy10
        method_name: lessBy10
        starter_code: |
          public boolean lessBy10(int a, int b, int c)
          {
              ___
          }
        wrapper_code: |
          public class LessBy10
          {
              ___
          }
        tests: |
          "1, 7, 11",true
          "1, 7, 10",false
          "11, 1, 7",true
          "10, 7, 1",false
          "10, 2, 2",true
          "2, 11, 11",false
          "3, 3, 3",false
          "2, 2, -8",true
          "3, 30, 3",true
          "10, 11, 1",true,hidden
          "10, 1, 11",true,hidden
          "11, 10, 1",true,hidden
          "1, 10, 11",true,hidden
          "11, 1, 10",true,hidden
          "1, 11, 10",true,hidden
          "156, 12, 678",true,hidden
          "-9, -11, -20",true,hidden
          "-21, -12, -20",falsehidden

- name: in1To10
  external_id: codingbat-in1To10
  is_public: false
  experience: 50
  language_list: Java
  style_list: code writing
  tag_list: logic, conditionals, if
  current_version:
    version: 1
    creator: metarus208@gmail.com
    prompts:
    - coding_prompt:
        position: 1
        question: |
          Write a function in Java that implements the following logic: Given
          a number n, return true if n is in the range 1..10, inclusive.
          Unless "outsideMode" is true, in which case return true if the
          number is less or equal to 1, or greater or equal to 10.
        class_name: In1To10
        method_name: in1To10
        starter_code: |
          public boolean in1To10(int n, boolean outsideMode)
          {
              ___
          }
        wrapper_code: |
          public class In1To10
          {
              ___
          }
        tests: |
          "5, false",true
          "11, false",false
          "11, true",true
          "8, true",false
          "1, false",true
          "1, true",true
          "20, false",false
          "132, true",true
          "4, true",false,hidden
          "-1, false",true, hidden
          "-1, false",false,hidden
          "0, true",true,hidden
          "1, false",true,hidden
          "1, true",true,hidden
          "10, false",true,hidden
          "10, true",true,hidden

- name: teaParty
  external_id: codingbat-teaParty
  is_public: false
  experience: 50
  language_list: Java
  style_list: code writing
  tag_list: logic, conditionals, if
  current_version:
    version: 1
    creator: metarus208@gmail.com
    prompts:
    - coding_prompt:
        position: 1
        question: |
          Write a function in Java that implements the following logic: We
          are having a party with amounts of tea and candy. Return the int
          outcome of the party encoded as 0 = bad, 1 = good, or 2 = great. A
          party is good (1) if both tea and candy are at least 5. However, if
          either tea or candy is at least double the amount of the other one,
          the party is great (2). However, in all cases, if either tea or
          candy is less than 5, the party is always bad (0).
        class_name: TeaParty
        method_name: teaParty
        starter_code: |
          public int teaParty(int tea, int candy)
          {
              ___
          }
        wrapper_code: |
          public class TeaParty
          {
              ___
          }
        tests: |
          "6, 8",1
          "10, 12",1
          "11, 9",1
          "3, 8",0
          "1, 3",0
          "2, 1",0
          "5, 4",0
          "4, 5",0
          "5, 5",1
          "20, 6",2
          "12, 6",2,hidden
          "5, 10",2,hidden
          "7, 14",2,hidden
          "7, 15",2,hidden
          "7, 13",1,hidden
          "11, 6",1,hidden
          "13, 6",2,hidden

- name: answerCell
  external_id: codingbat-answerCell
  is_public: false
  experience: 50
  language_list: Java
  style_list: code writing
  tag_list: logic, conditionals, if
  current_version:
    version: 1
    creator: metarus208@gmail.com
    prompts:
    - coding_prompt:
        position: 1
        question: |
          Write a function in Java that implements the following logic: Your
          cell phone rings. Return true if you should answer it. Normally you
          answer, except in the morning you only answer if it is your mom
          calling. In all cases, if you are asleep, you do not answer.
        class_name: AnswerCell
        method_name: answerCell
        starter_code: |
          public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
          {
              ___
          }
        wrapper_code: |
          public class AnswerCell
          {
              ___
          }
        tests: |
          "false, false, false",true
          "false, false, true",false
          "true, false, false",false
          "true, true, false",true
          "true, true, true",false
          "true, false, true",false,hidden
          "false, true, true",false,hidden
          "false, true, false",true,hidden

- name: helloName
  external_id: codingbat-helloName
  is_public: false
  experience: 50
  language_list: Java
  style_list: code writing
  tag_list: String, concatenation
  current_version:
    version: 1
    creator: metarus208@gmail.com
    prompts:
    - coding_prompt:
        position: 1
        question: |
          Write a function in Java that implements the following logic: Given
          a string name, e.g. "Bob", return a greeting of the form
          "Hello Bob!".
        class_name: HelloName
        method_name: helloName
        starter_code: |
          public String helloName(String name)
          {
              ___
          }
        wrapper_code: |
          public class HelloName
          {
              ___
          }
        tests: |
          """Bob""","""Hello Bob!"""
          """Alice""","""Hello Alice!"""
          """Dolly""","""Hello Dolly!"""
          """Alpha""","""Hello Alpha!"""
          """Omega""","""Hello Omega!"""
          """Goodbye""","""Hello Goodbye!"""
          """ho ho ho""","""Hello ho ho ho!"""
          """Stark""","""Hello Stark!""",hidden
          """xyz""","""Hello xyz!""",hidden
          """Hello""","""Hello Hello!""",hidden
          """Pipping""","""Hello Pipping!""",hidden

- name: endsLy
  external_id: codingbat-endsLy
  is_public: false
  experience: 50
  language_list: Java
  style_list: code writing
  tag_list: String, conditionals, if
  current_version:
    version: 1
    creator: metarus208@gmail.com
    prompts:
    - coding_prompt:
        position: 1
        question: |
          Write a function in Java that implements the following logic: Given
          a string, return true if it ends in "ly".
        class_name: EndsLy
        method_name: endsLy
        starter_code: |
          public boolean endsLy(String str)
          {
              ___
          }
        wrapper_code: |
          public class EndsLy
          {
              ___
          }
        tests: |
          "oddly",true
          "y",false
          "oody",false
          "boldly",true
          "l",false
          "woody",false
          "saddly",true
          "lyanna",false
          "sdfsdflysdf",false,hidden
          "nebawsegly",true,hidden
          "",false,hidden

- name: seeColor
  external_id: codingbat-seeColor
  is_public: false
  experience: 50
  language_list: Java
  style_list: code writing
  tag_list: String, conditionals, if
  current_version:
    version: 1
    creator: metarus208@gmail.com
    prompts:
    - coding_prompt:
        position: 1
        question: |
          Write a function in Java that implements the following logic: Given
          a string, if the string begins with "red" or "blue" return that
          color string, otherwise return the empty string.
        class_name: SeeColor
        method_name: seeColor
        starter_code: |
          public String seeColor(String str)
          {
              ___
          }
        wrapper_code: |
          public class SeeColor
          {
              ___
          }
        tests: |
          """redxx""","""red"""
          """redengine""","""red"""
          """red""","""red"""
          """xxred""",""""""
          """bluexx""","""blue"""
          """blueoval""","""blue"""
          """blue""","""blue""",hidden
          """xxblue""","""""",hidden
          """dfgdfg""","""""",hidden
          """vwerwer""","""""",hidden

- name: makeTags
  external_id: codingbat-makeTags
  is_public: false
  experience: 50
  language_list: Java
  style_list: code writing
  tag_list: String, conditionals, if, HTML tags
  current_version:
    version: 1
    creator: metarus208@gmail.com
    prompts:
    - coding_prompt:
        position: 1
        question: |
          Write a function in Java that implements the following logic: The
          web is built with HTML strings like "&lt;i&gt;Yay&lt;/i&gt;" which
          draws Yay as italic text. In this example, the "i" tag makes
          &lt;i&gt; and &lt;/i&gt; which surround the word "Yay". Given tag
          and word strings, create the HTML string with tags around the word,
          e.g. "&lt;i&gt;Yay&lt;/i&gt;".
        class_name: MakeTags
        method_name: makeTags
        starter_code: |
          public String makeTags(String tag, String word)
          {
              ___
          }
        wrapper_code: |
          public class MakeTags
          {
              ___
          }
        tests: |
          """i""";"""Yay""","""<i>Yay</i>"""
          """i""";"""Hello""","""<i>Hello</i>"""
          """cite""";"""Yay""","""<cite>Yay</cite>"""
          """i""";"""i""","""<i>i</i>"""
          """b""";"""i""","""<b>i</b>"""
          """b""";"""India""","""<b>India</b>""",hidden
          """i""";"""""","""<i></i>""",hidden
          """body""";"""""","""<body></body>""",hidden
          """address""";"""K""","""<address>K</address>""",hidden

- name: comboString
  external_id: codingbat-comboString
  is_public: false
  experience: 50
  language_list: Java
  style_list: code writing
  tag_list: String, conditionals, if
  current_version:
    version: 1
    creator: metarus208@gmail.com
    prompts:
    - coding_prompt:
        position: 1
        question: |
          Write a function in Java that implements the following logic: Given
          2 strings, a and b, return a string of the form short+long+short,
          with the shorter string on the outside and the longer string on the
          inside. The strings will not be the same length, but they may be
          empty (length 0).
        class_name: ComboString
        method_name: comboString
        starter_code: |
          public String comboString(String a, String b)
          {
              ___
          }
        wrapper_code: |
          public class ComboString
          {
              ___
          }
        tests: |
          """Hello""";"""hi""","""hiHellohi"""
          """hi""";"""Hello""","""hiHellohi"""
          """aaa""";"""b""","""baaab"""
          """lord""";"""bones""","""lordboneslord"""
          """katie""";"""markham""","""katiemarkhamkatie""",hidden
          """a""";"""baaa""","""abaaaa""",hidden
          """""";"""barristan""","""barristan""",hidden
          """winterfell""";"""""","""winterfell""",hidden
