- size ||= 'lg'
- start_workout ||= nil
- user ||= current_user
- workout_offering ||= nil
- workout ||= workout_offering.andand.workout
- if workout
  - workout_id ||= workout
- else
  - workout_id ||= session[:current_workout]
  - workout ||= workout_id ? Workout.find_by(id: workout_id) : nil
- if workout_offering
  - workout_score ||= workout_offering.score_for(user)
- else
  - workout_score ||= workout && user && workout.score_for(user)
-#
- pts = workout ? workout.exercise_workouts.where(exercise: exercise).first.andand.points : nil
- attempt = workout_score ? workout_score.attempt_for(exercise) : nil
- score = attempt ? attempt.score : 0
- if !pts
  - pts = exercise.experience
- pts = pts.to_i
- score_pct = (score / pts * 100).round(0).to_i
- if score.round(1) < pts
  - score = score.round(0).to_i
  - if score >= pts
    - score -= 1
- else
  - score = score.round(0).to_i
-#
%article.exercise.thumbnail{ class: size }
  .title
    - if exercise.is_mcq?
      %i.glyphicon.glyphicon-th-list
    - elsif exercise.is_coding?
      %span.fa-stack
        %i.fa.fa-square.fa-stack-2x
        %i.fa.fa-terminal.fa-stack-1x.fa-inverse
    - else
      %i.fa-pencil-square-o
    - if workout_offering
      - if workout_offering.can_be_practiced_by?(user)
        - if start_workout
          = link_to exercise.display_name,
            organization_workout_offering_practice_path(exercise_id: exercise.id,
              organization_id: workout_offering.course_offering.course.organization.slug,
              course_id: workout_offering.course_offering.course.slug,
              term_id: workout_offering.course_offering.term.slug,
              id: workout_offering.id)
        - else
          = link_to exercise.display_name,
            organization_workout_offering_exercise_path(id: exercise.id,
              organization_id: workout_offering.course_offering.course.organization.slug,
              course_id: workout_offering.course_offering.course.slug,
              term_id: workout_offering.course_offering.term.slug,
              workout_offering_id: workout_offering.id)
      - else
        = exercise.display_name
    - else
      = link_to exercise.display_name, exercise_practice_path(exercise)
  .summary
    .radial-progress{ 'data-progress' => score_pct }
      .circle
        .mask.full
          .fill
        .mask.half
          .fill
          .fill.fix
        .shadow
      .inset
        .score
          = n_to_s(score)
          %span.outof>
            = "/ "  + n_to_s(pts)
  .body
    .text
      = teaser(exercise.current_version.andand.prompts.andand.first.andand.question)
  .info
    = difficulty_image(exercise.experience.to_i)
    .taglist
      - exercise.tags.each do |t|
        = link_to t.name, search_path(search: t.name),
          method: :post, class: 'tag'
    -#
      - attempt = nil
      - uid = 0
      - if user_signed_in?
        - uid = current_user.id
      - attempt_pct = 0
      - ex_workout = nil
      - if uid && uid != 0
        - attempt = Attempt.where(user_id: uid,
          exercise_version: exercise.current_version).last
        - if attempt && attempt.score > 0
          - attempt_pct = 100
        - if workout_id
          - ex_workout = ExerciseWorkout.find_by(exercise_id: exercise.id,
            workout_id: workout_id)
          - if ex_workout && attempt
            - attempt_pct = number_to_percentage(attempt.score.round(2) / ex_workout.points)
      .pts
        - if attempt
          = n_to_s attempt.score.round(2)
          - plural = (attempt.score != 1)
          - if ex_workout
            = '/'
            = n_to_s ex_workout.points
            - plural = (ex_workout.points != 1)
          - if plural
            pts
          - else
            pt

        - elsif workout_id
          - ex_workout = ExerciseWorkout.find_by(exercise_id: exercise.id,
            workout_id: workout_id)
          = ex_workout.points
          - if ex_workout.points != 1
            pts
          - else
            pt
        - else
          = n_to_s(exercise.experience) + ' xp'
-#
  .progress
    - att = Attempt.where(user_id: uid,
      exercise_version: exercise.current_version).last
    - ex_workout = nil
    - if workout_id
      - ex_workout = ExerciseWorkout.find_by(exercise_id: exercise.id, workout_id: workout_id)
    - if att && ex_workout
      - attemptp = attempt.score.round(2)
      .progress-bar{ role: 'progressbar',
        'aria-valuenow' => attempt_pct,
        'aria-valuemax' => 100,
        'aria-valuemin' => 0,
        style: 'width: ' + attempt_pct.to_s + '%;' }
        %progress{value: attemptp, max: ex_workout.points }
    - elsif ex_workout
      .progress-bar{ role: 'progressbar',
        'aria-valuenow' => 0,
        'aria-valuemax' => 100,
        'aria-valuemin' => 0,
        style: 'width: 0%;' }
        %progress{value: 0,max: ex_workout.points }
    - else
      %progress.progress-bar{ role: 'progressbar',
        'aria-valuenow' => 0,
        'aria-valuemax' => 100,
        'aria-valuemin' => 0,
        style: 'width: 0%;' ,
        value: 0,max: 100 }
